---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: manageddatabaseopensearches.database.upcloud.com
spec:
  group: database.upcloud.com
  names:
    categories:
    - crossplane
    - managed
    - upcloud
    kind: ManagedDatabaseOpensearch
    listKind: ManagedDatabaseOpensearchList
    plural: manageddatabaseopensearches
    singular: manageddatabaseopensearch
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ManagedDatabaseOpensearch is the Schema for the ManagedDatabaseOpensearchs
          API. This resource represents OpenSearch managed database. See UpCloud Managed
          Databases https://upcloud.com/products/managed-databases product page for
          more details about the service.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ManagedDatabaseOpensearchSpec defines the desired state of
              ManagedDatabaseOpensearch
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessControl:
                    description: |-
                      (Boolean) Enables users access control for OpenSearch service. User access control rules will only be enforced if this attribute is enabled.
                      Enables users access control for OpenSearch service. User access control rules will only be enforced if this attribute is enabled.
                    type: boolean
                  extendedAccessControl:
                    description: |-
                      level _mget, _msearch and _bulk APIs. Users are limited to perform operations on indices based on the user-specific access control rules.
                      Grant access to top-level `_mget`, `_msearch` and `_bulk` APIs. Users are limited to perform operations on indices based on the user-specific access control rules.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      value pairs to classify the managed database.
                      User defined key-value pairs to classify the managed database.
                    type: object
                    x-kubernetes-map-type: granular
                  maintenanceWindowDow:
                    description: |-
                      (String) Maintenance window day of week. Lower case weekday name (monday, tuesday, ...)
                      Maintenance window day of week. Lower case weekday name (monday, tuesday, ...)
                    type: string
                  maintenanceWindowTime:
                    description: |-
                      (String) Maintenance window UTC time in hh:mm:ss format
                      Maintenance window UTC time in hh:mm:ss format
                    type: string
                  name:
                    description: |-
                      (String) Name of the service. The name is used as a prefix for the logical hostname. Must be unique within an account
                      Name of the service. The name is used as a prefix for the logical hostname. Must be unique within an account
                    type: string
                  network:
                    description: |-
                      (Block Set, Max: 8) Private networks attached to the managed database (see below for nested schema)
                      Private networks attached to the managed database
                    items:
                      properties:
                        family:
                          description: |-
                            (String) Network family. Currently only IPv4 is supported.
                            Network family. Currently only `IPv4` is supported.
                          type: string
                        name:
                          description: |-
                            (String) Name of the service. The name is used as a prefix for the logical hostname. Must be unique within an account
                            The name of the network. Must be unique within the service.
                          type: string
                        type:
                          description: |-
                            (String) Type of the service
                            The type of the network. Must be private.
                          type: string
                        uuid:
                          description: |-
                            (String) Private network UUID. Must reside in the same zone as the database.
                            Private network UUID. Must reside in the same zone as the database.
                          type: string
                        uuidRef:
                          description: Reference to a Network in network to populate
                            uuid.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        uuidSelector:
                          description: Selector for a Network in network to populate
                            uuid.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  nodeStates:
                    description: |-
                      (List of Object) Information about nodes providing the managed service (see below for nested schema)
                      Information about nodes providing the managed service
                    items:
                      properties:
                        role:
                          description: |-
                            (String)
                            Role of the node
                          type: string
                      type: object
                    type: array
                  plan:
                    description: |-
                      (String) Service plan to use. This determines how much resources the instance will have. You can list available plans with upctl database plans <type>.
                      Service plan to use. This determines how much resources the instance will have. You can list available plans with `upctl database plans <type>`.
                    type: string
                  powered:
                    description: |-
                      (Boolean) The administrative power state of the service
                      The administrative power state of the service
                    type: boolean
                  properties:
                    description: |-
                      (Block List, Max: 1) Database Engine properties for OpenSearch (see below for nested schema)
                      Database Engine properties for OpenSearch
                    items:
                      properties:
                        actionAutoCreateIndexEnabled:
                          description: |-
                            (Boolean) action.auto_create_index. Explicitly allow or block automatic creation of indices. Defaults to true.
                            action.auto_create_index. Explicitly allow or block automatic creation of indices. Defaults to true.
                          type: boolean
                        actionDestructiveRequiresName:
                          description: |-
                            (Boolean) Require explicit index names when deleting.
                            Require explicit index names when deleting.
                          type: boolean
                        authFailureListeners:
                          description: |-
                            (Block List, Max: 1) Opensearch Security Plugin Settings. (see below for nested schema)
                            Opensearch Security Plugin Settings.
                          items:
                            properties:
                              internalAuthenticationBackendLimiting:
                                description: '(Block List, Max: 1) (see below for
                                  nested schema)'
                                items:
                                  properties:
                                    allowedTries:
                                      description: |-
                                        (Number) The number of login attempts allowed before login is blocked.
                                        The number of login attempts allowed before login is blocked.
                                      format: int64
                                      type: integer
                                    authenticationBackend:
                                      description: |-
                                        (String) The internal backend. Enter internal.
                                        The internal backend. Enter `internal`.
                                      type: string
                                    blockExpirySeconds:
                                      description: |-
                                        (Number) The duration of time that login remains blocked after a failed login.
                                        The duration of time that login remains blocked after a failed login.
                                      format: int64
                                      type: integer
                                    maxBlockedClients:
                                      description: |-
                                        (Number) The maximum number of blocked IP addresses.
                                        The maximum number of blocked IP addresses.
                                      format: int64
                                      type: integer
                                    maxTrackedClients:
                                      description: |-
                                        (Number) The maximum number of tracked IP addresses that have failed login.
                                        The maximum number of tracked IP addresses that have failed login.
                                      format: int64
                                      type: integer
                                    timeWindowSeconds:
                                      description: |-
                                        (Number) The window of time in which the value for allowed_tries is enforced.
                                        The window of time in which the value for `allowed_tries` is enforced.
                                      format: int64
                                      type: integer
                                    type:
                                      description: |-
                                        (String) Type of the service
                                        The type of rate limiting.
                                      type: string
                                  type: object
                                type: array
                              ipRateLimiting:
                                description: |-
                                  (Block List, Max: 1) IP address rate limiting settings. (see below for nested schema)
                                  IP address rate limiting settings.
                                items:
                                  properties:
                                    allowedTries:
                                      description: |-
                                        (Number) The number of login attempts allowed before login is blocked.
                                        The number of login attempts allowed before login is blocked.
                                      format: int64
                                      type: integer
                                    blockExpirySeconds:
                                      description: |-
                                        (Number) The duration of time that login remains blocked after a failed login.
                                        The duration of time that login remains blocked after a failed login.
                                      format: int64
                                      type: integer
                                    maxBlockedClients:
                                      description: |-
                                        (Number) The maximum number of blocked IP addresses.
                                        The maximum number of blocked IP addresses.
                                      format: int64
                                      type: integer
                                    maxTrackedClients:
                                      description: |-
                                        (Number) The maximum number of tracked IP addresses that have failed login.
                                        The maximum number of tracked IP addresses that have failed login.
                                      format: int64
                                      type: integer
                                    timeWindowSeconds:
                                      description: |-
                                        (Number) The window of time in which the value for allowed_tries is enforced.
                                        The window of time in which the value for `allowed_tries` is enforced.
                                      format: int64
                                      type: integer
                                    type:
                                      description: |-
                                        (String) Type of the service
                                        The type of rate limiting.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        automaticUtilityNetworkIpFilter:
                          description: |-
                            (Boolean) Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
                            Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
                          type: boolean
                        azureMigration:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              account:
                                description: |-
                                  (String) Account name. Azure account name.
                                  Account name. Azure account name.
                                type: string
                              basePath:
                                description: |-
                                  (String) The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                  The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                type: string
                              chunkSize:
                                description: |-
                                  (String) Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                  Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                type: string
                              compress:
                                description: |-
                                  (Boolean) Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                  Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                type: boolean
                              container:
                                description: |-
                                  (String) Azure container name. Azure container name.
                                  Azure container name. Azure container name.
                                type: string
                              endpointSuffix:
                                description: |-
                                  (String) Endpoint suffix. Defines the DNS suffix for Azure Storage endpoints.
                                  Endpoint suffix. Defines the DNS suffix for Azure Storage endpoints.
                                type: string
                              key:
                                description: |-
                                  (String) Account secret key. Azure account secret key. One of key or sas_token should be specified.
                                  Account secret key. Azure account secret key. One of key or sas_token should be specified.
                                type: string
                              sasToken:
                                description: |-
                                  (String) SAS token. A shared access signatures (SAS) token. One of key or sas_token should be specified.
                                  SAS token. A shared access signatures (SAS) token. One of key or sas_token should be specified.
                                type: string
                              snapshotName:
                                description: |-
                                  (String) The snapshot name to restore from. The snapshot name to restore from.
                                  The snapshot name to restore from. The snapshot name to restore from.
                                type: string
                            type: object
                          type: array
                        clusterMaxShardsPerNode:
                          description: |-
                            (Number) Controls the number of shards allowed in the cluster per data node.
                            Controls the number of shards allowed in the cluster per data node.
                          format: int64
                          type: integer
                        clusterRoutingAllocationNodeConcurrentRecoveries:
                          description: |-
                            (Number) Concurrent incoming/outgoing shard recoveries per node. How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
                            Concurrent incoming/outgoing shard recoveries per node. How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
                          format: int64
                          type: integer
                        customDomain:
                          description: |-
                            (String) Custom domain. Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
                            Custom domain. Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
                          type: string
                        emailSenderName:
                          description: |-
                            (String) Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. This should be identical to the Sender name defined in Opensearch dashboards.
                            Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. This should be identical to the Sender name defined in Opensearch dashboards.
                          type: string
                        emailSenderPasswordSecretRef:
                          description: |-
                            (String, Sensitive) Sender password for Opensearch alerts to authenticate with SMTP server. Sender password for Opensearch alerts to authenticate with SMTP server.
                            Sender password for Opensearch alerts to authenticate with SMTP server. Sender password for Opensearch alerts to authenticate with SMTP server.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        emailSenderUsername:
                          description: |-
                            (String) Sender username for Opensearch alerts.
                            Sender username for Opensearch alerts.
                          type: string
                        enableSecurityAudit:
                          description: |-
                            (Boolean) Enable/Disable security audit.
                            Enable/Disable security audit.
                          type: boolean
                        gcsMigration:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              basePath:
                                description: |-
                                  (String) The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                  The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                type: string
                              bucket:
                                description: |-
                                  (String) The path to the repository data within its container. Google Cloud Storage bucket name.
                                  The path to the repository data within its container. Google Cloud Storage bucket name.
                                type: string
                              chunkSize:
                                description: |-
                                  (String) Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                  Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                type: string
                              compress:
                                description: |-
                                  (Boolean) Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                  Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                type: boolean
                              credentials:
                                description: |-
                                  (String) Credentials. Google Cloud Storage credentials file content.
                                  Credentials. Google Cloud Storage credentials file content.
                                type: string
                              snapshotName:
                                description: |-
                                  (String) The snapshot name to restore from. The snapshot name to restore from.
                                  The snapshot name to restore from. The snapshot name to restore from.
                                type: string
                            type: object
                          type: array
                        httpMaxContentLength:
                          description: |-
                            (Number) Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
                            Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
                          format: int64
                          type: integer
                        httpMaxHeaderSize:
                          description: |-
                            (Number) The max size of allowed headers, in bytes.
                            The max size of allowed headers, in bytes.
                          format: int64
                          type: integer
                        httpMaxInitialLineLength:
                          description: |-
                            (Number) The max length of an HTTP URL, in bytes.
                            The max length of an HTTP URL, in bytes.
                          format: int64
                          type: integer
                        indexPatterns:
                          description: |-
                            (List of String) Index patterns.
                            Index patterns.
                          items:
                            type: string
                          type: array
                        indexRollup:
                          description: |-
                            (Block List, Max: 1) Index rollup settings. (see below for nested schema)
                            Index rollup settings.
                          items:
                            properties:
                              rollupDashboardsEnabled:
                                description: |-
                                  (Boolean) plugins.rollup.dashboards.enabled. Whether rollups are enabled in OpenSearch Dashboards. Defaults to true.
                                  plugins.rollup.dashboards.enabled. Whether rollups are enabled in OpenSearch Dashboards. Defaults to true.
                                type: boolean
                              rollupEnabled:
                                description: |-
                                  (Boolean) plugins.rollup.enabled. Whether the rollup plugin is enabled. Defaults to true.
                                  plugins.rollup.enabled. Whether the rollup plugin is enabled. Defaults to true.
                                type: boolean
                              rollupSearchBackoffCount:
                                description: |-
                                  (Number) plugins.rollup.search.backoff_count. How many retries the plugin should attempt for failed rollup jobs. Defaults to 5.
                                  plugins.rollup.search.backoff_count. How many retries the plugin should attempt for failed rollup jobs. Defaults to 5.
                                format: int64
                                type: integer
                              rollupSearchBackoffMillis:
                                description: |-
                                  (Number) plugins.rollup.search.backoff_millis. The backoff time between retries for failed rollup jobs. Defaults to 1000ms.
                                  plugins.rollup.search.backoff_millis. The backoff time between retries for failed rollup jobs. Defaults to 1000ms.
                                format: int64
                                type: integer
                              rollupSearchSearchAllJobs:
                                description: |-
                                  (Boolean) plugins.rollup.search.all_jobs. Whether OpenSearch should return all jobs that match all specified search terms. If disabled, OpenSearch returns just one, as opposed to all, of the jobs that matches the search terms. Defaults to false.
                                  plugins.rollup.search.all_jobs. Whether OpenSearch should return all jobs that match all specified search terms. If disabled, OpenSearch returns just one, as opposed to all, of the jobs that matches the search terms. Defaults to false.
                                type: boolean
                            type: object
                          type: array
                        indexTemplate:
                          description: |-
                            (Block List, Max: 1) Template settings for all new indexes. (see below for nested schema)
                            Template settings for all new indexes.
                          items:
                            properties:
                              mappingNestedObjectsLimit:
                                description: |-
                                  (Number) index.mapping.nested_objects.limit. The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
                                  index.mapping.nested_objects.limit. The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
                                format: int64
                                type: integer
                              numberOfReplicas:
                                description: |-
                                  (Number) The number of replicas each primary shard has.
                                  The number of replicas each primary shard has.
                                format: int64
                                type: integer
                              numberOfShards:
                                description: |-
                                  (Number) The number of primary shards that an index should have.
                                  The number of primary shards that an index should have.
                                format: int64
                                type: integer
                            type: object
                          type: array
                        indicesFielddataCacheSize:
                          description: |-
                            (Number) Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
                            Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
                          format: int64
                          type: integer
                        indicesMemoryIndexBufferSize:
                          description: |-
                            (Number) Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
                            Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
                          format: int64
                          type: integer
                        indicesMemoryMaxIndexBufferSize:
                          description: |-
                            (Number) Absolute value. Default is unbound. Doesn't work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.
                            Absolute value. Default is unbound. Doesn't work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.
                          format: int64
                          type: integer
                        indicesMemoryMinIndexBufferSize:
                          description: |-
                            (Number) Absolute value. Default is 48mb. Doesn't work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.
                            Absolute value. Default is 48mb. Doesn't work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.
                          format: int64
                          type: integer
                        indicesQueriesCacheSize:
                          description: |-
                            (Number) Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
                            Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
                          format: int64
                          type: integer
                        indicesQueryBoolMaxClauseCount:
                          description: |-
                            (Number) Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
                            Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
                          format: int64
                          type: integer
                        indicesRecoveryMaxBytesPerSec:
                          description: |-
                            (Number) Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
                            Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
                          format: int64
                          type: integer
                        indicesRecoveryMaxConcurrentFileChunks:
                          description: |-
                            (Number) Number of file chunks sent in parallel for each recovery. Defaults to 2.
                            Number of file chunks sent in parallel for each recovery. Defaults to 2.
                          format: int64
                          type: integer
                        ipFilter:
                          description: |-
                            (List of String) IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
                            IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
                          items:
                            type: string
                          type: array
                        ismEnabled:
                          description: |-
                            (Boolean) Specifies whether ISM is enabled or not.
                            Specifies whether ISM is enabled or not.
                          type: boolean
                        ismHistoryEnabled:
                          description: |-
                            (Boolean) Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
                            Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
                          type: boolean
                        ismHistoryMaxAge:
                          description: |-
                            (Number) The maximum age before rolling over the audit history index in hours.
                            The maximum age before rolling over the audit history index in hours.
                          format: int64
                          type: integer
                        ismHistoryMaxDocs:
                          description: |-
                            (Number) The maximum number of documents before rolling over the audit history index.
                            The maximum number of documents before rolling over the audit history index.
                          format: int64
                          type: integer
                        ismHistoryRolloverCheckPeriod:
                          description: |-
                            (Number) The time between rollover checks for the audit history index in hours.
                            The time between rollover checks for the audit history index in hours.
                          format: int64
                          type: integer
                        ismHistoryRolloverRetentionPeriod:
                          description: |-
                            (Number) How long audit history indices are kept in days.
                            How long audit history indices are kept in days.
                          format: int64
                          type: integer
                        keepIndexRefreshInterval:
                          description: |-
                            (Boolean) Don't reset index.refresh_interval to the default value. Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
                            Don't reset index.refresh_interval to the default value. Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
                          type: boolean
                        knnMemoryCircuitBreakerEnabled:
                          description: |-
                            (Boolean) Enable or disable KNN memory circuit breaker. Defaults to true.
                            Enable or disable KNN memory circuit breaker. Defaults to true.
                          type: boolean
                        knnMemoryCircuitBreakerLimit:
                          description: |-
                            (Number) Maximum amount of memory that can be used for KNN index. Defaults to 50% of the JVM heap size.
                            Maximum amount of memory that can be used for KNN index. Defaults to 50% of the JVM heap size.
                          format: int64
                          type: integer
                        openid:
                          description: |-
                            (Block List, Max: 1) OpenSearch OpenID Connect Configuration. (see below for nested schema)
                            OpenSearch OpenID Connect Configuration.
                          items:
                            properties:
                              clientId:
                                description: |-
                                  (String) The ID of the OpenID Connect client. The ID of the OpenID Connect client configured in your IdP. Required.
                                  The ID of the OpenID Connect client. The ID of the OpenID Connect client configured in your IdP. Required.
                                type: string
                              clientSecret:
                                description: |-
                                  (String) The client secret of the OpenID Connect. The client secret of the OpenID Connect client configured in your IdP. Required.
                                  The client secret of the OpenID Connect. The client secret of the OpenID Connect client configured in your IdP. Required.
                                type: string
                              connectUrl:
                                description: |-
                                  (String) OpenID Connect metadata/configuration URL. The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.
                                  OpenID Connect metadata/configuration URL. The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.
                                type: string
                              enabled:
                                description: |-
                                  (Boolean) Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
                                  Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
                                type: boolean
                              header:
                                description: |-
                                  (String) HTTP header name of the JWT token. HTTP header name of the JWT token. Optional. Default is Authorization.
                                  HTTP header name of the JWT token. HTTP header name of the JWT token. Optional. Default is Authorization.
                                type: string
                              jwtHeader:
                                description: |-
                                  (String) The HTTP header that stores the token. The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer . Optional. Default is Authorization.
                                  The HTTP header that stores the token. The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer <token>. Optional. Default is Authorization.
                                type: string
                              jwtUrlParameter:
                                description: |-
                                  (String) URL JWT token. If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.
                                  URL JWT token. If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.
                                type: string
                              refreshRateLimitCount:
                                description: |-
                                  (Number) The maximum number of unknown key IDs in the time frame. The maximum number of unknown key IDs in the time frame. Default is 10. Optional.
                                  The maximum number of unknown key IDs in the time frame. The maximum number of unknown key IDs in the time frame. Default is 10. Optional.
                                format: int64
                                type: integer
                              refreshRateLimitTimeWindowMs:
                                description: |-
                                  (Number) The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds).
                                  The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds).
                                format: int64
                                type: integer
                              rolesKey:
                                description: |-
                                  separated list of roles. Required only if you want to use roles in the JWT.
                                  The key in the JSON payload that stores the user’s roles. The key in the JSON payload that stores the user’s roles. The value of this key must be a comma-separated list of roles. Required only if you want to use roles in the JWT.
                                type: string
                              scope:
                                description: |-
                                  (String) The scope of the identity token issued by the IdP. The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.
                                  The scope of the identity token issued by the IdP. The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.
                                type: string
                              subjectKey:
                                description: |-
                                  (String) The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.
                                  The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.
                                type: string
                            type: object
                          type: array
                        opensearchDashboards:
                          description: |-
                            (Block List, Max: 1) OpenSearch Dashboards settings. (see below for nested schema)
                            OpenSearch Dashboards settings.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
                                  Enable or disable OpenSearch Dashboards.
                                type: boolean
                              maxOldSpaceSize:
                                description: |-
                                  (Number) Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch.
                                  Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch.
                                format: int64
                                type: integer
                              opensearchRequestTimeout:
                                description: |-
                                  (Number) Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch.
                                  Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch.
                                format: int64
                                type: integer
                            type: object
                          type: array
                        overrideMainResponseVersion:
                          description: |-
                            (Boolean) Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
                            Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
                          type: boolean
                        pluginsAlertingFilterByBackendRoles:
                          description: |-
                            (Boolean) Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
                            Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
                          type: boolean
                        publicAccess:
                          description: |-
                            (Boolean) Public Access. Allow access to the service from the public Internet.
                            Public Access. Allow access to the service from the public Internet.
                          type: boolean
                        reindexRemoteWhitelist:
                          description: |-
                            (List of String) Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
                            Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
                          items:
                            type: string
                          type: array
                        s3Migration:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              accessKey:
                                description: |-
                                  (String) AWS Access key. AWS Access key.
                                  AWS Access key. AWS Access key.
                                type: string
                              basePath:
                                description: |-
                                  (String) The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                  The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                type: string
                              bucket:
                                description: |-
                                  (String) The path to the repository data within its container. Google Cloud Storage bucket name.
                                  S3 bucket name. S3 bucket name.
                                type: string
                              chunkSize:
                                description: |-
                                  (String) Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                  Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                type: string
                              compress:
                                description: |-
                                  (Boolean) Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                  Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                type: boolean
                              endpoint:
                                description: |-
                                  compatible service then you should set this to the service’s endpoint.
                                  The S3 service endpoint to connect. The S3 service endpoint to connect to. If you are using an S3-compatible service then you should set this to the service’s endpoint.
                                type: string
                              region:
                                description: |-
                                  (String) S3 region. S3 region.
                                  S3 region. S3 region.
                                type: string
                              secretKey:
                                description: |-
                                  (String) AWS secret key. AWS secret key.
                                  AWS secret key. AWS secret key.
                                type: string
                              serverSideEncryption:
                                description: |-
                                  (Boolean) Server side encryption. When set to true files are encrypted on server side.
                                  Server side encryption. When set to true files are encrypted on server side.
                                type: boolean
                              snapshotName:
                                description: |-
                                  (String) The snapshot name to restore from. The snapshot name to restore from.
                                  The snapshot name to restore from. The snapshot name to restore from.
                                type: string
                            type: object
                          type: array
                        saml:
                          description: |-
                            (Block List, Max: 1) OpenSearch SAML configuration. (see below for nested schema)
                            OpenSearch SAML configuration.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
                                  Enable or disable OpenSearch SAML authentication. Enables or disables SAML-based authentication for OpenSearch. When enabled, users can authenticate using SAML with an Identity Provider.
                                type: boolean
                              idpEntityId:
                                description: |-
                                  (String) Identity Provider Entity ID. The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.
                                  Identity Provider Entity ID. The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.
                                type: string
                              idpMetadataUrl:
                                description: |-
                                  based authentication with the IdP.
                                  Identity Provider (IdP) SAML metadata URL. The URL of the SAML metadata for the Identity Provider (IdP). This is used to configure SAML-based authentication with the IdP.
                                type: string
                              idpPemtrustedcasContent:
                                description: |-
                                  encoded root CA Content for SAML IdP server verification. This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.
                                  PEM-encoded root CA Content for SAML IdP server verification. This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.
                                type: string
                              rolesKey:
                                description: |-
                                  separated list of roles. Required only if you want to use roles in the JWT.
                                  SAML response role attribute. Optional. Specifies the attribute in the SAML response where role information is stored, if available. Role attributes are not required for SAML authentication, but can be included in SAML assertions by most Identity Providers (IdPs) to determine user access levels or permissions.
                                type: string
                              spEntityId:
                                description: |-
                                  (String) Service Provider Entity ID. The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.
                                  Service Provider Entity ID. The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.
                                type: string
                              subjectKey:
                                description: |-
                                  (String) The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.
                                  SAML response subject attribute. Optional. Specifies the attribute in the SAML response where the subject identifier is stored. If not configured, the NameID attribute is used by default.
                                type: string
                            type: object
                          type: array
                        scriptMaxCompilationsRate:
                          description: |-
                            circuit breaker to prevent/minimize OOMs. Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
                            Script max compilation rate - circuit breaker to prevent/minimize OOMs. Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
                          type: string
                        searchMaxBuckets:
                          description: |-
                            (Number) Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
                            Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
                          format: int64
                          type: integer
                        serviceLog:
                          description: |-
                            (Boolean) Service logging. Store logs for the service so that they are available in the HTTP API and console.
                            Service logging. Store logs for the service so that they are available in the HTTP API and console.
                          type: boolean
                        threadPoolAnalyzeQueueSize:
                          description: |-
                            (Number) analyze thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            analyze thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolAnalyzeSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            analyze thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolForceMergeSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            force_merge thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolGetQueueSize:
                          description: |-
                            (Number) get thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            get thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolGetSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            get thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolSearchQueueSize:
                          description: |-
                            (Number) search thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            search thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolSearchSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            search thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolSearchThrottledQueueSize:
                          description: |-
                            (Number) search_throttled thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            search_throttled thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolSearchThrottledSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            search_throttled thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolWriteQueueSize:
                          description: |-
                            (Number) write thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            write thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolWriteSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            write thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        version:
                          description: |-
                            (String) OpenSearch major version.
                            OpenSearch major version.
                          type: string
                      type: object
                    type: array
                  title:
                    description: |-
                      (String) Title of a managed database instance
                      Title of a managed database instance
                    type: string
                  zone:
                    description: |-
                      fra1. You can list available zones with upctl zone list.
                      Zone where the instance resides, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accessControl:
                    description: |-
                      (Boolean) Enables users access control for OpenSearch service. User access control rules will only be enforced if this attribute is enabled.
                      Enables users access control for OpenSearch service. User access control rules will only be enforced if this attribute is enabled.
                    type: boolean
                  extendedAccessControl:
                    description: |-
                      level _mget, _msearch and _bulk APIs. Users are limited to perform operations on indices based on the user-specific access control rules.
                      Grant access to top-level `_mget`, `_msearch` and `_bulk` APIs. Users are limited to perform operations on indices based on the user-specific access control rules.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      value pairs to classify the managed database.
                      User defined key-value pairs to classify the managed database.
                    type: object
                    x-kubernetes-map-type: granular
                  maintenanceWindowDow:
                    description: |-
                      (String) Maintenance window day of week. Lower case weekday name (monday, tuesday, ...)
                      Maintenance window day of week. Lower case weekday name (monday, tuesday, ...)
                    type: string
                  maintenanceWindowTime:
                    description: |-
                      (String) Maintenance window UTC time in hh:mm:ss format
                      Maintenance window UTC time in hh:mm:ss format
                    type: string
                  name:
                    description: |-
                      (String) Name of the service. The name is used as a prefix for the logical hostname. Must be unique within an account
                      Name of the service. The name is used as a prefix for the logical hostname. Must be unique within an account
                    type: string
                  network:
                    description: |-
                      (Block Set, Max: 8) Private networks attached to the managed database (see below for nested schema)
                      Private networks attached to the managed database
                    items:
                      properties:
                        family:
                          description: |-
                            (String) Network family. Currently only IPv4 is supported.
                            Network family. Currently only `IPv4` is supported.
                          type: string
                        name:
                          description: |-
                            (String) Name of the service. The name is used as a prefix for the logical hostname. Must be unique within an account
                            The name of the network. Must be unique within the service.
                          type: string
                        type:
                          description: |-
                            (String) Type of the service
                            The type of the network. Must be private.
                          type: string
                        uuid:
                          description: |-
                            (String) Private network UUID. Must reside in the same zone as the database.
                            Private network UUID. Must reside in the same zone as the database.
                          type: string
                        uuidRef:
                          description: Reference to a Network in network to populate
                            uuid.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        uuidSelector:
                          description: Selector for a Network in network to populate
                            uuid.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  nodeStates:
                    description: |-
                      (List of Object) Information about nodes providing the managed service (see below for nested schema)
                      Information about nodes providing the managed service
                    items:
                      properties:
                        role:
                          description: |-
                            (String)
                            Role of the node
                          type: string
                      type: object
                    type: array
                  plan:
                    description: |-
                      (String) Service plan to use. This determines how much resources the instance will have. You can list available plans with upctl database plans <type>.
                      Service plan to use. This determines how much resources the instance will have. You can list available plans with `upctl database plans <type>`.
                    type: string
                  powered:
                    description: |-
                      (Boolean) The administrative power state of the service
                      The administrative power state of the service
                    type: boolean
                  properties:
                    description: |-
                      (Block List, Max: 1) Database Engine properties for OpenSearch (see below for nested schema)
                      Database Engine properties for OpenSearch
                    items:
                      properties:
                        actionAutoCreateIndexEnabled:
                          description: |-
                            (Boolean) action.auto_create_index. Explicitly allow or block automatic creation of indices. Defaults to true.
                            action.auto_create_index. Explicitly allow or block automatic creation of indices. Defaults to true.
                          type: boolean
                        actionDestructiveRequiresName:
                          description: |-
                            (Boolean) Require explicit index names when deleting.
                            Require explicit index names when deleting.
                          type: boolean
                        authFailureListeners:
                          description: |-
                            (Block List, Max: 1) Opensearch Security Plugin Settings. (see below for nested schema)
                            Opensearch Security Plugin Settings.
                          items:
                            properties:
                              internalAuthenticationBackendLimiting:
                                description: '(Block List, Max: 1) (see below for
                                  nested schema)'
                                items:
                                  properties:
                                    allowedTries:
                                      description: |-
                                        (Number) The number of login attempts allowed before login is blocked.
                                        The number of login attempts allowed before login is blocked.
                                      format: int64
                                      type: integer
                                    authenticationBackend:
                                      description: |-
                                        (String) The internal backend. Enter internal.
                                        The internal backend. Enter `internal`.
                                      type: string
                                    blockExpirySeconds:
                                      description: |-
                                        (Number) The duration of time that login remains blocked after a failed login.
                                        The duration of time that login remains blocked after a failed login.
                                      format: int64
                                      type: integer
                                    maxBlockedClients:
                                      description: |-
                                        (Number) The maximum number of blocked IP addresses.
                                        The maximum number of blocked IP addresses.
                                      format: int64
                                      type: integer
                                    maxTrackedClients:
                                      description: |-
                                        (Number) The maximum number of tracked IP addresses that have failed login.
                                        The maximum number of tracked IP addresses that have failed login.
                                      format: int64
                                      type: integer
                                    timeWindowSeconds:
                                      description: |-
                                        (Number) The window of time in which the value for allowed_tries is enforced.
                                        The window of time in which the value for `allowed_tries` is enforced.
                                      format: int64
                                      type: integer
                                    type:
                                      description: |-
                                        (String) Type of the service
                                        The type of rate limiting.
                                      type: string
                                  type: object
                                type: array
                              ipRateLimiting:
                                description: |-
                                  (Block List, Max: 1) IP address rate limiting settings. (see below for nested schema)
                                  IP address rate limiting settings.
                                items:
                                  properties:
                                    allowedTries:
                                      description: |-
                                        (Number) The number of login attempts allowed before login is blocked.
                                        The number of login attempts allowed before login is blocked.
                                      format: int64
                                      type: integer
                                    blockExpirySeconds:
                                      description: |-
                                        (Number) The duration of time that login remains blocked after a failed login.
                                        The duration of time that login remains blocked after a failed login.
                                      format: int64
                                      type: integer
                                    maxBlockedClients:
                                      description: |-
                                        (Number) The maximum number of blocked IP addresses.
                                        The maximum number of blocked IP addresses.
                                      format: int64
                                      type: integer
                                    maxTrackedClients:
                                      description: |-
                                        (Number) The maximum number of tracked IP addresses that have failed login.
                                        The maximum number of tracked IP addresses that have failed login.
                                      format: int64
                                      type: integer
                                    timeWindowSeconds:
                                      description: |-
                                        (Number) The window of time in which the value for allowed_tries is enforced.
                                        The window of time in which the value for `allowed_tries` is enforced.
                                      format: int64
                                      type: integer
                                    type:
                                      description: |-
                                        (String) Type of the service
                                        The type of rate limiting.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        automaticUtilityNetworkIpFilter:
                          description: |-
                            (Boolean) Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
                            Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
                          type: boolean
                        azureMigration:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              account:
                                description: |-
                                  (String) Account name. Azure account name.
                                  Account name. Azure account name.
                                type: string
                              basePath:
                                description: |-
                                  (String) The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                  The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                type: string
                              chunkSize:
                                description: |-
                                  (String) Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                  Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                type: string
                              compress:
                                description: |-
                                  (Boolean) Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                  Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                type: boolean
                              container:
                                description: |-
                                  (String) Azure container name. Azure container name.
                                  Azure container name. Azure container name.
                                type: string
                              endpointSuffix:
                                description: |-
                                  (String) Endpoint suffix. Defines the DNS suffix for Azure Storage endpoints.
                                  Endpoint suffix. Defines the DNS suffix for Azure Storage endpoints.
                                type: string
                              key:
                                description: |-
                                  (String) Account secret key. Azure account secret key. One of key or sas_token should be specified.
                                  Account secret key. Azure account secret key. One of key or sas_token should be specified.
                                type: string
                              sasToken:
                                description: |-
                                  (String) SAS token. A shared access signatures (SAS) token. One of key or sas_token should be specified.
                                  SAS token. A shared access signatures (SAS) token. One of key or sas_token should be specified.
                                type: string
                              snapshotName:
                                description: |-
                                  (String) The snapshot name to restore from. The snapshot name to restore from.
                                  The snapshot name to restore from. The snapshot name to restore from.
                                type: string
                            type: object
                          type: array
                        clusterMaxShardsPerNode:
                          description: |-
                            (Number) Controls the number of shards allowed in the cluster per data node.
                            Controls the number of shards allowed in the cluster per data node.
                          format: int64
                          type: integer
                        clusterRoutingAllocationNodeConcurrentRecoveries:
                          description: |-
                            (Number) Concurrent incoming/outgoing shard recoveries per node. How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
                            Concurrent incoming/outgoing shard recoveries per node. How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
                          format: int64
                          type: integer
                        customDomain:
                          description: |-
                            (String) Custom domain. Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
                            Custom domain. Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
                          type: string
                        emailSenderName:
                          description: |-
                            (String) Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. This should be identical to the Sender name defined in Opensearch dashboards.
                            Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. This should be identical to the Sender name defined in Opensearch dashboards.
                          type: string
                        emailSenderPasswordSecretRef:
                          description: |-
                            (String, Sensitive) Sender password for Opensearch alerts to authenticate with SMTP server. Sender password for Opensearch alerts to authenticate with SMTP server.
                            Sender password for Opensearch alerts to authenticate with SMTP server. Sender password for Opensearch alerts to authenticate with SMTP server.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        emailSenderUsername:
                          description: |-
                            (String) Sender username for Opensearch alerts.
                            Sender username for Opensearch alerts.
                          type: string
                        enableSecurityAudit:
                          description: |-
                            (Boolean) Enable/Disable security audit.
                            Enable/Disable security audit.
                          type: boolean
                        gcsMigration:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              basePath:
                                description: |-
                                  (String) The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                  The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                type: string
                              bucket:
                                description: |-
                                  (String) The path to the repository data within its container. Google Cloud Storage bucket name.
                                  The path to the repository data within its container. Google Cloud Storage bucket name.
                                type: string
                              chunkSize:
                                description: |-
                                  (String) Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                  Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                type: string
                              compress:
                                description: |-
                                  (Boolean) Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                  Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                type: boolean
                              credentials:
                                description: |-
                                  (String) Credentials. Google Cloud Storage credentials file content.
                                  Credentials. Google Cloud Storage credentials file content.
                                type: string
                              snapshotName:
                                description: |-
                                  (String) The snapshot name to restore from. The snapshot name to restore from.
                                  The snapshot name to restore from. The snapshot name to restore from.
                                type: string
                            type: object
                          type: array
                        httpMaxContentLength:
                          description: |-
                            (Number) Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
                            Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
                          format: int64
                          type: integer
                        httpMaxHeaderSize:
                          description: |-
                            (Number) The max size of allowed headers, in bytes.
                            The max size of allowed headers, in bytes.
                          format: int64
                          type: integer
                        httpMaxInitialLineLength:
                          description: |-
                            (Number) The max length of an HTTP URL, in bytes.
                            The max length of an HTTP URL, in bytes.
                          format: int64
                          type: integer
                        indexPatterns:
                          description: |-
                            (List of String) Index patterns.
                            Index patterns.
                          items:
                            type: string
                          type: array
                        indexRollup:
                          description: |-
                            (Block List, Max: 1) Index rollup settings. (see below for nested schema)
                            Index rollup settings.
                          items:
                            properties:
                              rollupDashboardsEnabled:
                                description: |-
                                  (Boolean) plugins.rollup.dashboards.enabled. Whether rollups are enabled in OpenSearch Dashboards. Defaults to true.
                                  plugins.rollup.dashboards.enabled. Whether rollups are enabled in OpenSearch Dashboards. Defaults to true.
                                type: boolean
                              rollupEnabled:
                                description: |-
                                  (Boolean) plugins.rollup.enabled. Whether the rollup plugin is enabled. Defaults to true.
                                  plugins.rollup.enabled. Whether the rollup plugin is enabled. Defaults to true.
                                type: boolean
                              rollupSearchBackoffCount:
                                description: |-
                                  (Number) plugins.rollup.search.backoff_count. How many retries the plugin should attempt for failed rollup jobs. Defaults to 5.
                                  plugins.rollup.search.backoff_count. How many retries the plugin should attempt for failed rollup jobs. Defaults to 5.
                                format: int64
                                type: integer
                              rollupSearchBackoffMillis:
                                description: |-
                                  (Number) plugins.rollup.search.backoff_millis. The backoff time between retries for failed rollup jobs. Defaults to 1000ms.
                                  plugins.rollup.search.backoff_millis. The backoff time between retries for failed rollup jobs. Defaults to 1000ms.
                                format: int64
                                type: integer
                              rollupSearchSearchAllJobs:
                                description: |-
                                  (Boolean) plugins.rollup.search.all_jobs. Whether OpenSearch should return all jobs that match all specified search terms. If disabled, OpenSearch returns just one, as opposed to all, of the jobs that matches the search terms. Defaults to false.
                                  plugins.rollup.search.all_jobs. Whether OpenSearch should return all jobs that match all specified search terms. If disabled, OpenSearch returns just one, as opposed to all, of the jobs that matches the search terms. Defaults to false.
                                type: boolean
                            type: object
                          type: array
                        indexTemplate:
                          description: |-
                            (Block List, Max: 1) Template settings for all new indexes. (see below for nested schema)
                            Template settings for all new indexes.
                          items:
                            properties:
                              mappingNestedObjectsLimit:
                                description: |-
                                  (Number) index.mapping.nested_objects.limit. The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
                                  index.mapping.nested_objects.limit. The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
                                format: int64
                                type: integer
                              numberOfReplicas:
                                description: |-
                                  (Number) The number of replicas each primary shard has.
                                  The number of replicas each primary shard has.
                                format: int64
                                type: integer
                              numberOfShards:
                                description: |-
                                  (Number) The number of primary shards that an index should have.
                                  The number of primary shards that an index should have.
                                format: int64
                                type: integer
                            type: object
                          type: array
                        indicesFielddataCacheSize:
                          description: |-
                            (Number) Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
                            Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
                          format: int64
                          type: integer
                        indicesMemoryIndexBufferSize:
                          description: |-
                            (Number) Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
                            Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
                          format: int64
                          type: integer
                        indicesMemoryMaxIndexBufferSize:
                          description: |-
                            (Number) Absolute value. Default is unbound. Doesn't work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.
                            Absolute value. Default is unbound. Doesn't work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.
                          format: int64
                          type: integer
                        indicesMemoryMinIndexBufferSize:
                          description: |-
                            (Number) Absolute value. Default is 48mb. Doesn't work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.
                            Absolute value. Default is 48mb. Doesn't work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.
                          format: int64
                          type: integer
                        indicesQueriesCacheSize:
                          description: |-
                            (Number) Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
                            Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
                          format: int64
                          type: integer
                        indicesQueryBoolMaxClauseCount:
                          description: |-
                            (Number) Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
                            Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
                          format: int64
                          type: integer
                        indicesRecoveryMaxBytesPerSec:
                          description: |-
                            (Number) Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
                            Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
                          format: int64
                          type: integer
                        indicesRecoveryMaxConcurrentFileChunks:
                          description: |-
                            (Number) Number of file chunks sent in parallel for each recovery. Defaults to 2.
                            Number of file chunks sent in parallel for each recovery. Defaults to 2.
                          format: int64
                          type: integer
                        ipFilter:
                          description: |-
                            (List of String) IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
                            IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
                          items:
                            type: string
                          type: array
                        ismEnabled:
                          description: |-
                            (Boolean) Specifies whether ISM is enabled or not.
                            Specifies whether ISM is enabled or not.
                          type: boolean
                        ismHistoryEnabled:
                          description: |-
                            (Boolean) Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
                            Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
                          type: boolean
                        ismHistoryMaxAge:
                          description: |-
                            (Number) The maximum age before rolling over the audit history index in hours.
                            The maximum age before rolling over the audit history index in hours.
                          format: int64
                          type: integer
                        ismHistoryMaxDocs:
                          description: |-
                            (Number) The maximum number of documents before rolling over the audit history index.
                            The maximum number of documents before rolling over the audit history index.
                          format: int64
                          type: integer
                        ismHistoryRolloverCheckPeriod:
                          description: |-
                            (Number) The time between rollover checks for the audit history index in hours.
                            The time between rollover checks for the audit history index in hours.
                          format: int64
                          type: integer
                        ismHistoryRolloverRetentionPeriod:
                          description: |-
                            (Number) How long audit history indices are kept in days.
                            How long audit history indices are kept in days.
                          format: int64
                          type: integer
                        keepIndexRefreshInterval:
                          description: |-
                            (Boolean) Don't reset index.refresh_interval to the default value. Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
                            Don't reset index.refresh_interval to the default value. Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
                          type: boolean
                        knnMemoryCircuitBreakerEnabled:
                          description: |-
                            (Boolean) Enable or disable KNN memory circuit breaker. Defaults to true.
                            Enable or disable KNN memory circuit breaker. Defaults to true.
                          type: boolean
                        knnMemoryCircuitBreakerLimit:
                          description: |-
                            (Number) Maximum amount of memory that can be used for KNN index. Defaults to 50% of the JVM heap size.
                            Maximum amount of memory that can be used for KNN index. Defaults to 50% of the JVM heap size.
                          format: int64
                          type: integer
                        openid:
                          description: |-
                            (Block List, Max: 1) OpenSearch OpenID Connect Configuration. (see below for nested schema)
                            OpenSearch OpenID Connect Configuration.
                          items:
                            properties:
                              clientId:
                                description: |-
                                  (String) The ID of the OpenID Connect client. The ID of the OpenID Connect client configured in your IdP. Required.
                                  The ID of the OpenID Connect client. The ID of the OpenID Connect client configured in your IdP. Required.
                                type: string
                              clientSecret:
                                description: |-
                                  (String) The client secret of the OpenID Connect. The client secret of the OpenID Connect client configured in your IdP. Required.
                                  The client secret of the OpenID Connect. The client secret of the OpenID Connect client configured in your IdP. Required.
                                type: string
                              connectUrl:
                                description: |-
                                  (String) OpenID Connect metadata/configuration URL. The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.
                                  OpenID Connect metadata/configuration URL. The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.
                                type: string
                              enabled:
                                description: |-
                                  (Boolean) Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
                                  Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
                                type: boolean
                              header:
                                description: |-
                                  (String) HTTP header name of the JWT token. HTTP header name of the JWT token. Optional. Default is Authorization.
                                  HTTP header name of the JWT token. HTTP header name of the JWT token. Optional. Default is Authorization.
                                type: string
                              jwtHeader:
                                description: |-
                                  (String) The HTTP header that stores the token. The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer . Optional. Default is Authorization.
                                  The HTTP header that stores the token. The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer <token>. Optional. Default is Authorization.
                                type: string
                              jwtUrlParameter:
                                description: |-
                                  (String) URL JWT token. If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.
                                  URL JWT token. If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.
                                type: string
                              refreshRateLimitCount:
                                description: |-
                                  (Number) The maximum number of unknown key IDs in the time frame. The maximum number of unknown key IDs in the time frame. Default is 10. Optional.
                                  The maximum number of unknown key IDs in the time frame. The maximum number of unknown key IDs in the time frame. Default is 10. Optional.
                                format: int64
                                type: integer
                              refreshRateLimitTimeWindowMs:
                                description: |-
                                  (Number) The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds).
                                  The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds).
                                format: int64
                                type: integer
                              rolesKey:
                                description: |-
                                  separated list of roles. Required only if you want to use roles in the JWT.
                                  The key in the JSON payload that stores the user’s roles. The key in the JSON payload that stores the user’s roles. The value of this key must be a comma-separated list of roles. Required only if you want to use roles in the JWT.
                                type: string
                              scope:
                                description: |-
                                  (String) The scope of the identity token issued by the IdP. The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.
                                  The scope of the identity token issued by the IdP. The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.
                                type: string
                              subjectKey:
                                description: |-
                                  (String) The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.
                                  The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.
                                type: string
                            type: object
                          type: array
                        opensearchDashboards:
                          description: |-
                            (Block List, Max: 1) OpenSearch Dashboards settings. (see below for nested schema)
                            OpenSearch Dashboards settings.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
                                  Enable or disable OpenSearch Dashboards.
                                type: boolean
                              maxOldSpaceSize:
                                description: |-
                                  (Number) Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch.
                                  Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch.
                                format: int64
                                type: integer
                              opensearchRequestTimeout:
                                description: |-
                                  (Number) Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch.
                                  Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch.
                                format: int64
                                type: integer
                            type: object
                          type: array
                        overrideMainResponseVersion:
                          description: |-
                            (Boolean) Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
                            Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
                          type: boolean
                        pluginsAlertingFilterByBackendRoles:
                          description: |-
                            (Boolean) Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
                            Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
                          type: boolean
                        publicAccess:
                          description: |-
                            (Boolean) Public Access. Allow access to the service from the public Internet.
                            Public Access. Allow access to the service from the public Internet.
                          type: boolean
                        reindexRemoteWhitelist:
                          description: |-
                            (List of String) Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
                            Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
                          items:
                            type: string
                          type: array
                        s3Migration:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              accessKey:
                                description: |-
                                  (String) AWS Access key. AWS Access key.
                                  AWS Access key. AWS Access key.
                                type: string
                              basePath:
                                description: |-
                                  (String) The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                  The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                type: string
                              bucket:
                                description: |-
                                  (String) The path to the repository data within its container. Google Cloud Storage bucket name.
                                  S3 bucket name. S3 bucket name.
                                type: string
                              chunkSize:
                                description: |-
                                  (String) Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                  Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                type: string
                              compress:
                                description: |-
                                  (Boolean) Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                  Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                type: boolean
                              endpoint:
                                description: |-
                                  compatible service then you should set this to the service’s endpoint.
                                  The S3 service endpoint to connect. The S3 service endpoint to connect to. If you are using an S3-compatible service then you should set this to the service’s endpoint.
                                type: string
                              region:
                                description: |-
                                  (String) S3 region. S3 region.
                                  S3 region. S3 region.
                                type: string
                              secretKey:
                                description: |-
                                  (String) AWS secret key. AWS secret key.
                                  AWS secret key. AWS secret key.
                                type: string
                              serverSideEncryption:
                                description: |-
                                  (Boolean) Server side encryption. When set to true files are encrypted on server side.
                                  Server side encryption. When set to true files are encrypted on server side.
                                type: boolean
                              snapshotName:
                                description: |-
                                  (String) The snapshot name to restore from. The snapshot name to restore from.
                                  The snapshot name to restore from. The snapshot name to restore from.
                                type: string
                            type: object
                          type: array
                        saml:
                          description: |-
                            (Block List, Max: 1) OpenSearch SAML configuration. (see below for nested schema)
                            OpenSearch SAML configuration.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
                                  Enable or disable OpenSearch SAML authentication. Enables or disables SAML-based authentication for OpenSearch. When enabled, users can authenticate using SAML with an Identity Provider.
                                type: boolean
                              idpEntityId:
                                description: |-
                                  (String) Identity Provider Entity ID. The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.
                                  Identity Provider Entity ID. The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.
                                type: string
                              idpMetadataUrl:
                                description: |-
                                  based authentication with the IdP.
                                  Identity Provider (IdP) SAML metadata URL. The URL of the SAML metadata for the Identity Provider (IdP). This is used to configure SAML-based authentication with the IdP.
                                type: string
                              idpPemtrustedcasContent:
                                description: |-
                                  encoded root CA Content for SAML IdP server verification. This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.
                                  PEM-encoded root CA Content for SAML IdP server verification. This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.
                                type: string
                              rolesKey:
                                description: |-
                                  separated list of roles. Required only if you want to use roles in the JWT.
                                  SAML response role attribute. Optional. Specifies the attribute in the SAML response where role information is stored, if available. Role attributes are not required for SAML authentication, but can be included in SAML assertions by most Identity Providers (IdPs) to determine user access levels or permissions.
                                type: string
                              spEntityId:
                                description: |-
                                  (String) Service Provider Entity ID. The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.
                                  Service Provider Entity ID. The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.
                                type: string
                              subjectKey:
                                description: |-
                                  (String) The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.
                                  SAML response subject attribute. Optional. Specifies the attribute in the SAML response where the subject identifier is stored. If not configured, the NameID attribute is used by default.
                                type: string
                            type: object
                          type: array
                        scriptMaxCompilationsRate:
                          description: |-
                            circuit breaker to prevent/minimize OOMs. Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
                            Script max compilation rate - circuit breaker to prevent/minimize OOMs. Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
                          type: string
                        searchMaxBuckets:
                          description: |-
                            (Number) Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
                            Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
                          format: int64
                          type: integer
                        serviceLog:
                          description: |-
                            (Boolean) Service logging. Store logs for the service so that they are available in the HTTP API and console.
                            Service logging. Store logs for the service so that they are available in the HTTP API and console.
                          type: boolean
                        threadPoolAnalyzeQueueSize:
                          description: |-
                            (Number) analyze thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            analyze thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolAnalyzeSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            analyze thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolForceMergeSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            force_merge thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolGetQueueSize:
                          description: |-
                            (Number) get thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            get thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolGetSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            get thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolSearchQueueSize:
                          description: |-
                            (Number) search thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            search thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolSearchSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            search thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolSearchThrottledQueueSize:
                          description: |-
                            (Number) search_throttled thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            search_throttled thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolSearchThrottledSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            search_throttled thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolWriteQueueSize:
                          description: |-
                            (Number) write thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            write thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolWriteSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            write thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        version:
                          description: |-
                            (String) OpenSearch major version.
                            OpenSearch major version.
                          type: string
                      type: object
                    type: array
                  title:
                    description: |-
                      (String) Title of a managed database instance
                      Title of a managed database instance
                    type: string
                  zone:
                    description: |-
                      fra1. You can list available zones with upctl zone list.
                      Zone where the instance resides, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.plan is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.plan)
                || (has(self.initProvider) && has(self.initProvider.plan))'
            - message: spec.forProvider.title is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.title)
                || (has(self.initProvider) && has(self.initProvider.title))'
            - message: spec.forProvider.zone is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.zone)
                || (has(self.initProvider) && has(self.initProvider.zone))'
          status:
            description: ManagedDatabaseOpensearchStatus defines the observed state
              of ManagedDatabaseOpensearch.
            properties:
              atProvider:
                properties:
                  accessControl:
                    description: |-
                      (Boolean) Enables users access control for OpenSearch service. User access control rules will only be enforced if this attribute is enabled.
                      Enables users access control for OpenSearch service. User access control rules will only be enforced if this attribute is enabled.
                    type: boolean
                  components:
                    description: |-
                      (List of Object) Service component information (see below for nested schema)
                      Service component information
                    items:
                      properties:
                        component:
                          description: |-
                            (String)
                            Type of the component
                          type: string
                        host:
                          description: |-
                            (String)
                            Hostname of the component
                          type: string
                        port:
                          description: |-
                            (Number)
                            Port number of the component
                          format: int64
                          type: integer
                        route:
                          description: |-
                            (String)
                            Component network route type
                          type: string
                        usage:
                          description: |-
                            (String)
                            Usage of the component
                          type: string
                      type: object
                    type: array
                  extendedAccessControl:
                    description: |-
                      level _mget, _msearch and _bulk APIs. Users are limited to perform operations on indices based on the user-specific access control rules.
                      Grant access to top-level `_mget`, `_msearch` and `_bulk` APIs. Users are limited to perform operations on indices based on the user-specific access control rules.
                    type: boolean
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      value pairs to classify the managed database.
                      User defined key-value pairs to classify the managed database.
                    type: object
                    x-kubernetes-map-type: granular
                  maintenanceWindowDow:
                    description: |-
                      (String) Maintenance window day of week. Lower case weekday name (monday, tuesday, ...)
                      Maintenance window day of week. Lower case weekday name (monday, tuesday, ...)
                    type: string
                  maintenanceWindowTime:
                    description: |-
                      (String) Maintenance window UTC time in hh:mm:ss format
                      Maintenance window UTC time in hh:mm:ss format
                    type: string
                  name:
                    description: |-
                      (String) Name of the service. The name is used as a prefix for the logical hostname. Must be unique within an account
                      Name of the service. The name is used as a prefix for the logical hostname. Must be unique within an account
                    type: string
                  network:
                    description: |-
                      (Block Set, Max: 8) Private networks attached to the managed database (see below for nested schema)
                      Private networks attached to the managed database
                    items:
                      properties:
                        family:
                          description: |-
                            (String) Network family. Currently only IPv4 is supported.
                            Network family. Currently only `IPv4` is supported.
                          type: string
                        name:
                          description: |-
                            (String) Name of the service. The name is used as a prefix for the logical hostname. Must be unique within an account
                            The name of the network. Must be unique within the service.
                          type: string
                        type:
                          description: |-
                            (String) Type of the service
                            The type of the network. Must be private.
                          type: string
                        uuid:
                          description: |-
                            (String) Private network UUID. Must reside in the same zone as the database.
                            Private network UUID. Must reside in the same zone as the database.
                          type: string
                      type: object
                    type: array
                  nodeStates:
                    description: |-
                      (List of Object) Information about nodes providing the managed service (see below for nested schema)
                      Information about nodes providing the managed service
                    items:
                      properties:
                        name:
                          description: |-
                            (String) Name of the service. The name is used as a prefix for the logical hostname. Must be unique within an account
                            Name plus a node iteration
                          type: string
                        role:
                          description: |-
                            (String)
                            Role of the node
                          type: string
                        state:
                          description: |-
                            (String) State of the service
                            State of the node
                          type: string
                      type: object
                    type: array
                  plan:
                    description: |-
                      (String) Service plan to use. This determines how much resources the instance will have. You can list available plans with upctl database plans <type>.
                      Service plan to use. This determines how much resources the instance will have. You can list available plans with `upctl database plans <type>`.
                    type: string
                  powered:
                    description: |-
                      (Boolean) The administrative power state of the service
                      The administrative power state of the service
                    type: boolean
                  primaryDatabase:
                    description: |-
                      (String) Primary database name
                      Primary database name
                    type: string
                  properties:
                    description: |-
                      (Block List, Max: 1) Database Engine properties for OpenSearch (see below for nested schema)
                      Database Engine properties for OpenSearch
                    items:
                      properties:
                        actionAutoCreateIndexEnabled:
                          description: |-
                            (Boolean) action.auto_create_index. Explicitly allow or block automatic creation of indices. Defaults to true.
                            action.auto_create_index. Explicitly allow or block automatic creation of indices. Defaults to true.
                          type: boolean
                        actionDestructiveRequiresName:
                          description: |-
                            (Boolean) Require explicit index names when deleting.
                            Require explicit index names when deleting.
                          type: boolean
                        authFailureListeners:
                          description: |-
                            (Block List, Max: 1) Opensearch Security Plugin Settings. (see below for nested schema)
                            Opensearch Security Plugin Settings.
                          items:
                            properties:
                              internalAuthenticationBackendLimiting:
                                description: '(Block List, Max: 1) (see below for
                                  nested schema)'
                                items:
                                  properties:
                                    allowedTries:
                                      description: |-
                                        (Number) The number of login attempts allowed before login is blocked.
                                        The number of login attempts allowed before login is blocked.
                                      format: int64
                                      type: integer
                                    authenticationBackend:
                                      description: |-
                                        (String) The internal backend. Enter internal.
                                        The internal backend. Enter `internal`.
                                      type: string
                                    blockExpirySeconds:
                                      description: |-
                                        (Number) The duration of time that login remains blocked after a failed login.
                                        The duration of time that login remains blocked after a failed login.
                                      format: int64
                                      type: integer
                                    maxBlockedClients:
                                      description: |-
                                        (Number) The maximum number of blocked IP addresses.
                                        The maximum number of blocked IP addresses.
                                      format: int64
                                      type: integer
                                    maxTrackedClients:
                                      description: |-
                                        (Number) The maximum number of tracked IP addresses that have failed login.
                                        The maximum number of tracked IP addresses that have failed login.
                                      format: int64
                                      type: integer
                                    timeWindowSeconds:
                                      description: |-
                                        (Number) The window of time in which the value for allowed_tries is enforced.
                                        The window of time in which the value for `allowed_tries` is enforced.
                                      format: int64
                                      type: integer
                                    type:
                                      description: |-
                                        (String) Type of the service
                                        The type of rate limiting.
                                      type: string
                                  type: object
                                type: array
                              ipRateLimiting:
                                description: |-
                                  (Block List, Max: 1) IP address rate limiting settings. (see below for nested schema)
                                  IP address rate limiting settings.
                                items:
                                  properties:
                                    allowedTries:
                                      description: |-
                                        (Number) The number of login attempts allowed before login is blocked.
                                        The number of login attempts allowed before login is blocked.
                                      format: int64
                                      type: integer
                                    blockExpirySeconds:
                                      description: |-
                                        (Number) The duration of time that login remains blocked after a failed login.
                                        The duration of time that login remains blocked after a failed login.
                                      format: int64
                                      type: integer
                                    maxBlockedClients:
                                      description: |-
                                        (Number) The maximum number of blocked IP addresses.
                                        The maximum number of blocked IP addresses.
                                      format: int64
                                      type: integer
                                    maxTrackedClients:
                                      description: |-
                                        (Number) The maximum number of tracked IP addresses that have failed login.
                                        The maximum number of tracked IP addresses that have failed login.
                                      format: int64
                                      type: integer
                                    timeWindowSeconds:
                                      description: |-
                                        (Number) The window of time in which the value for allowed_tries is enforced.
                                        The window of time in which the value for `allowed_tries` is enforced.
                                      format: int64
                                      type: integer
                                    type:
                                      description: |-
                                        (String) Type of the service
                                        The type of rate limiting.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        automaticUtilityNetworkIpFilter:
                          description: |-
                            (Boolean) Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
                            Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
                          type: boolean
                        azureMigration:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              account:
                                description: |-
                                  (String) Account name. Azure account name.
                                  Account name. Azure account name.
                                type: string
                              basePath:
                                description: |-
                                  (String) The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                  The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                type: string
                              chunkSize:
                                description: |-
                                  (String) Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                  Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                type: string
                              compress:
                                description: |-
                                  (Boolean) Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                  Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                type: boolean
                              container:
                                description: |-
                                  (String) Azure container name. Azure container name.
                                  Azure container name. Azure container name.
                                type: string
                              endpointSuffix:
                                description: |-
                                  (String) Endpoint suffix. Defines the DNS suffix for Azure Storage endpoints.
                                  Endpoint suffix. Defines the DNS suffix for Azure Storage endpoints.
                                type: string
                              key:
                                description: |-
                                  (String) Account secret key. Azure account secret key. One of key or sas_token should be specified.
                                  Account secret key. Azure account secret key. One of key or sas_token should be specified.
                                type: string
                              sasToken:
                                description: |-
                                  (String) SAS token. A shared access signatures (SAS) token. One of key or sas_token should be specified.
                                  SAS token. A shared access signatures (SAS) token. One of key or sas_token should be specified.
                                type: string
                              snapshotName:
                                description: |-
                                  (String) The snapshot name to restore from. The snapshot name to restore from.
                                  The snapshot name to restore from. The snapshot name to restore from.
                                type: string
                            type: object
                          type: array
                        clusterMaxShardsPerNode:
                          description: |-
                            (Number) Controls the number of shards allowed in the cluster per data node.
                            Controls the number of shards allowed in the cluster per data node.
                          format: int64
                          type: integer
                        clusterRoutingAllocationNodeConcurrentRecoveries:
                          description: |-
                            (Number) Concurrent incoming/outgoing shard recoveries per node. How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
                            Concurrent incoming/outgoing shard recoveries per node. How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
                          format: int64
                          type: integer
                        customDomain:
                          description: |-
                            (String) Custom domain. Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
                            Custom domain. Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
                          type: string
                        emailSenderName:
                          description: |-
                            (String) Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. This should be identical to the Sender name defined in Opensearch dashboards.
                            Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. This should be identical to the Sender name defined in Opensearch dashboards.
                          type: string
                        emailSenderUsername:
                          description: |-
                            (String) Sender username for Opensearch alerts.
                            Sender username for Opensearch alerts.
                          type: string
                        enableSecurityAudit:
                          description: |-
                            (Boolean) Enable/Disable security audit.
                            Enable/Disable security audit.
                          type: boolean
                        gcsMigration:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              basePath:
                                description: |-
                                  (String) The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                  The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                type: string
                              bucket:
                                description: |-
                                  (String) The path to the repository data within its container. Google Cloud Storage bucket name.
                                  The path to the repository data within its container. Google Cloud Storage bucket name.
                                type: string
                              chunkSize:
                                description: |-
                                  (String) Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                  Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                type: string
                              compress:
                                description: |-
                                  (Boolean) Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                  Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                type: boolean
                              credentials:
                                description: |-
                                  (String) Credentials. Google Cloud Storage credentials file content.
                                  Credentials. Google Cloud Storage credentials file content.
                                type: string
                              snapshotName:
                                description: |-
                                  (String) The snapshot name to restore from. The snapshot name to restore from.
                                  The snapshot name to restore from. The snapshot name to restore from.
                                type: string
                            type: object
                          type: array
                        httpMaxContentLength:
                          description: |-
                            (Number) Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
                            Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
                          format: int64
                          type: integer
                        httpMaxHeaderSize:
                          description: |-
                            (Number) The max size of allowed headers, in bytes.
                            The max size of allowed headers, in bytes.
                          format: int64
                          type: integer
                        httpMaxInitialLineLength:
                          description: |-
                            (Number) The max length of an HTTP URL, in bytes.
                            The max length of an HTTP URL, in bytes.
                          format: int64
                          type: integer
                        indexPatterns:
                          description: |-
                            (List of String) Index patterns.
                            Index patterns.
                          items:
                            type: string
                          type: array
                        indexRollup:
                          description: |-
                            (Block List, Max: 1) Index rollup settings. (see below for nested schema)
                            Index rollup settings.
                          items:
                            properties:
                              rollupDashboardsEnabled:
                                description: |-
                                  (Boolean) plugins.rollup.dashboards.enabled. Whether rollups are enabled in OpenSearch Dashboards. Defaults to true.
                                  plugins.rollup.dashboards.enabled. Whether rollups are enabled in OpenSearch Dashboards. Defaults to true.
                                type: boolean
                              rollupEnabled:
                                description: |-
                                  (Boolean) plugins.rollup.enabled. Whether the rollup plugin is enabled. Defaults to true.
                                  plugins.rollup.enabled. Whether the rollup plugin is enabled. Defaults to true.
                                type: boolean
                              rollupSearchBackoffCount:
                                description: |-
                                  (Number) plugins.rollup.search.backoff_count. How many retries the plugin should attempt for failed rollup jobs. Defaults to 5.
                                  plugins.rollup.search.backoff_count. How many retries the plugin should attempt for failed rollup jobs. Defaults to 5.
                                format: int64
                                type: integer
                              rollupSearchBackoffMillis:
                                description: |-
                                  (Number) plugins.rollup.search.backoff_millis. The backoff time between retries for failed rollup jobs. Defaults to 1000ms.
                                  plugins.rollup.search.backoff_millis. The backoff time between retries for failed rollup jobs. Defaults to 1000ms.
                                format: int64
                                type: integer
                              rollupSearchSearchAllJobs:
                                description: |-
                                  (Boolean) plugins.rollup.search.all_jobs. Whether OpenSearch should return all jobs that match all specified search terms. If disabled, OpenSearch returns just one, as opposed to all, of the jobs that matches the search terms. Defaults to false.
                                  plugins.rollup.search.all_jobs. Whether OpenSearch should return all jobs that match all specified search terms. If disabled, OpenSearch returns just one, as opposed to all, of the jobs that matches the search terms. Defaults to false.
                                type: boolean
                            type: object
                          type: array
                        indexTemplate:
                          description: |-
                            (Block List, Max: 1) Template settings for all new indexes. (see below for nested schema)
                            Template settings for all new indexes.
                          items:
                            properties:
                              mappingNestedObjectsLimit:
                                description: |-
                                  (Number) index.mapping.nested_objects.limit. The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
                                  index.mapping.nested_objects.limit. The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
                                format: int64
                                type: integer
                              numberOfReplicas:
                                description: |-
                                  (Number) The number of replicas each primary shard has.
                                  The number of replicas each primary shard has.
                                format: int64
                                type: integer
                              numberOfShards:
                                description: |-
                                  (Number) The number of primary shards that an index should have.
                                  The number of primary shards that an index should have.
                                format: int64
                                type: integer
                            type: object
                          type: array
                        indicesFielddataCacheSize:
                          description: |-
                            (Number) Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
                            Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
                          format: int64
                          type: integer
                        indicesMemoryIndexBufferSize:
                          description: |-
                            (Number) Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
                            Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
                          format: int64
                          type: integer
                        indicesMemoryMaxIndexBufferSize:
                          description: |-
                            (Number) Absolute value. Default is unbound. Doesn't work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.
                            Absolute value. Default is unbound. Doesn't work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.
                          format: int64
                          type: integer
                        indicesMemoryMinIndexBufferSize:
                          description: |-
                            (Number) Absolute value. Default is 48mb. Doesn't work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.
                            Absolute value. Default is 48mb. Doesn't work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.
                          format: int64
                          type: integer
                        indicesQueriesCacheSize:
                          description: |-
                            (Number) Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
                            Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
                          format: int64
                          type: integer
                        indicesQueryBoolMaxClauseCount:
                          description: |-
                            (Number) Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
                            Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
                          format: int64
                          type: integer
                        indicesRecoveryMaxBytesPerSec:
                          description: |-
                            (Number) Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
                            Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
                          format: int64
                          type: integer
                        indicesRecoveryMaxConcurrentFileChunks:
                          description: |-
                            (Number) Number of file chunks sent in parallel for each recovery. Defaults to 2.
                            Number of file chunks sent in parallel for each recovery. Defaults to 2.
                          format: int64
                          type: integer
                        ipFilter:
                          description: |-
                            (List of String) IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
                            IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
                          items:
                            type: string
                          type: array
                        ismEnabled:
                          description: |-
                            (Boolean) Specifies whether ISM is enabled or not.
                            Specifies whether ISM is enabled or not.
                          type: boolean
                        ismHistoryEnabled:
                          description: |-
                            (Boolean) Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
                            Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
                          type: boolean
                        ismHistoryMaxAge:
                          description: |-
                            (Number) The maximum age before rolling over the audit history index in hours.
                            The maximum age before rolling over the audit history index in hours.
                          format: int64
                          type: integer
                        ismHistoryMaxDocs:
                          description: |-
                            (Number) The maximum number of documents before rolling over the audit history index.
                            The maximum number of documents before rolling over the audit history index.
                          format: int64
                          type: integer
                        ismHistoryRolloverCheckPeriod:
                          description: |-
                            (Number) The time between rollover checks for the audit history index in hours.
                            The time between rollover checks for the audit history index in hours.
                          format: int64
                          type: integer
                        ismHistoryRolloverRetentionPeriod:
                          description: |-
                            (Number) How long audit history indices are kept in days.
                            How long audit history indices are kept in days.
                          format: int64
                          type: integer
                        keepIndexRefreshInterval:
                          description: |-
                            (Boolean) Don't reset index.refresh_interval to the default value. Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
                            Don't reset index.refresh_interval to the default value. Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
                          type: boolean
                        knnMemoryCircuitBreakerEnabled:
                          description: |-
                            (Boolean) Enable or disable KNN memory circuit breaker. Defaults to true.
                            Enable or disable KNN memory circuit breaker. Defaults to true.
                          type: boolean
                        knnMemoryCircuitBreakerLimit:
                          description: |-
                            (Number) Maximum amount of memory that can be used for KNN index. Defaults to 50% of the JVM heap size.
                            Maximum amount of memory that can be used for KNN index. Defaults to 50% of the JVM heap size.
                          format: int64
                          type: integer
                        openid:
                          description: |-
                            (Block List, Max: 1) OpenSearch OpenID Connect Configuration. (see below for nested schema)
                            OpenSearch OpenID Connect Configuration.
                          items:
                            properties:
                              clientId:
                                description: |-
                                  (String) The ID of the OpenID Connect client. The ID of the OpenID Connect client configured in your IdP. Required.
                                  The ID of the OpenID Connect client. The ID of the OpenID Connect client configured in your IdP. Required.
                                type: string
                              clientSecret:
                                description: |-
                                  (String) The client secret of the OpenID Connect. The client secret of the OpenID Connect client configured in your IdP. Required.
                                  The client secret of the OpenID Connect. The client secret of the OpenID Connect client configured in your IdP. Required.
                                type: string
                              connectUrl:
                                description: |-
                                  (String) OpenID Connect metadata/configuration URL. The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.
                                  OpenID Connect metadata/configuration URL. The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.
                                type: string
                              enabled:
                                description: |-
                                  (Boolean) Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
                                  Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
                                type: boolean
                              header:
                                description: |-
                                  (String) HTTP header name of the JWT token. HTTP header name of the JWT token. Optional. Default is Authorization.
                                  HTTP header name of the JWT token. HTTP header name of the JWT token. Optional. Default is Authorization.
                                type: string
                              jwtHeader:
                                description: |-
                                  (String) The HTTP header that stores the token. The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer . Optional. Default is Authorization.
                                  The HTTP header that stores the token. The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer <token>. Optional. Default is Authorization.
                                type: string
                              jwtUrlParameter:
                                description: |-
                                  (String) URL JWT token. If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.
                                  URL JWT token. If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.
                                type: string
                              refreshRateLimitCount:
                                description: |-
                                  (Number) The maximum number of unknown key IDs in the time frame. The maximum number of unknown key IDs in the time frame. Default is 10. Optional.
                                  The maximum number of unknown key IDs in the time frame. The maximum number of unknown key IDs in the time frame. Default is 10. Optional.
                                format: int64
                                type: integer
                              refreshRateLimitTimeWindowMs:
                                description: |-
                                  (Number) The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds).
                                  The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds).
                                format: int64
                                type: integer
                              rolesKey:
                                description: |-
                                  separated list of roles. Required only if you want to use roles in the JWT.
                                  The key in the JSON payload that stores the user’s roles. The key in the JSON payload that stores the user’s roles. The value of this key must be a comma-separated list of roles. Required only if you want to use roles in the JWT.
                                type: string
                              scope:
                                description: |-
                                  (String) The scope of the identity token issued by the IdP. The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.
                                  The scope of the identity token issued by the IdP. The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.
                                type: string
                              subjectKey:
                                description: |-
                                  (String) The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.
                                  The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.
                                type: string
                            type: object
                          type: array
                        opensearchDashboards:
                          description: |-
                            (Block List, Max: 1) OpenSearch Dashboards settings. (see below for nested schema)
                            OpenSearch Dashboards settings.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
                                  Enable or disable OpenSearch Dashboards.
                                type: boolean
                              maxOldSpaceSize:
                                description: |-
                                  (Number) Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch.
                                  Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch.
                                format: int64
                                type: integer
                              opensearchRequestTimeout:
                                description: |-
                                  (Number) Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch.
                                  Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch.
                                format: int64
                                type: integer
                            type: object
                          type: array
                        overrideMainResponseVersion:
                          description: |-
                            (Boolean) Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
                            Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
                          type: boolean
                        pluginsAlertingFilterByBackendRoles:
                          description: |-
                            (Boolean) Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
                            Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
                          type: boolean
                        publicAccess:
                          description: |-
                            (Boolean) Public Access. Allow access to the service from the public Internet.
                            Public Access. Allow access to the service from the public Internet.
                          type: boolean
                        reindexRemoteWhitelist:
                          description: |-
                            (List of String) Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
                            Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
                          items:
                            type: string
                          type: array
                        s3Migration:
                          description: '(Block List, Max: 1) (see below for nested
                            schema)'
                          items:
                            properties:
                              accessKey:
                                description: |-
                                  (String) AWS Access key. AWS Access key.
                                  AWS Access key. AWS Access key.
                                type: string
                              basePath:
                                description: |-
                                  (String) The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                  The path to the repository data within its container. The path to the repository data within its container. The value of this setting should not start or end with a /.
                                type: string
                              bucket:
                                description: |-
                                  (String) The path to the repository data within its container. Google Cloud Storage bucket name.
                                  S3 bucket name. S3 bucket name.
                                type: string
                              chunkSize:
                                description: |-
                                  (String) Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                  Chunk size. Big files can be broken down into chunks during snapshotting if needed. Should be the same as for the 3rd party repository.
                                type: string
                              compress:
                                description: |-
                                  (Boolean) Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                  Metadata files are stored in compressed format. when set to true metadata files are stored in compressed format.
                                type: boolean
                              endpoint:
                                description: |-
                                  compatible service then you should set this to the service’s endpoint.
                                  The S3 service endpoint to connect. The S3 service endpoint to connect to. If you are using an S3-compatible service then you should set this to the service’s endpoint.
                                type: string
                              region:
                                description: |-
                                  (String) S3 region. S3 region.
                                  S3 region. S3 region.
                                type: string
                              secretKey:
                                description: |-
                                  (String) AWS secret key. AWS secret key.
                                  AWS secret key. AWS secret key.
                                type: string
                              serverSideEncryption:
                                description: |-
                                  (Boolean) Server side encryption. When set to true files are encrypted on server side.
                                  Server side encryption. When set to true files are encrypted on server side.
                                type: boolean
                              snapshotName:
                                description: |-
                                  (String) The snapshot name to restore from. The snapshot name to restore from.
                                  The snapshot name to restore from. The snapshot name to restore from.
                                type: string
                            type: object
                          type: array
                        saml:
                          description: |-
                            (Block List, Max: 1) OpenSearch SAML configuration. (see below for nested schema)
                            OpenSearch SAML configuration.
                          items:
                            properties:
                              enabled:
                                description: |-
                                  (Boolean) Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
                                  Enable or disable OpenSearch SAML authentication. Enables or disables SAML-based authentication for OpenSearch. When enabled, users can authenticate using SAML with an Identity Provider.
                                type: boolean
                              idpEntityId:
                                description: |-
                                  (String) Identity Provider Entity ID. The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.
                                  Identity Provider Entity ID. The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.
                                type: string
                              idpMetadataUrl:
                                description: |-
                                  based authentication with the IdP.
                                  Identity Provider (IdP) SAML metadata URL. The URL of the SAML metadata for the Identity Provider (IdP). This is used to configure SAML-based authentication with the IdP.
                                type: string
                              idpPemtrustedcasContent:
                                description: |-
                                  encoded root CA Content for SAML IdP server verification. This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.
                                  PEM-encoded root CA Content for SAML IdP server verification. This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.
                                type: string
                              rolesKey:
                                description: |-
                                  separated list of roles. Required only if you want to use roles in the JWT.
                                  SAML response role attribute. Optional. Specifies the attribute in the SAML response where role information is stored, if available. Role attributes are not required for SAML authentication, but can be included in SAML assertions by most Identity Providers (IdPs) to determine user access levels or permissions.
                                type: string
                              spEntityId:
                                description: |-
                                  (String) Service Provider Entity ID. The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.
                                  Service Provider Entity ID. The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.
                                type: string
                              subjectKey:
                                description: |-
                                  (String) The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.
                                  SAML response subject attribute. Optional. Specifies the attribute in the SAML response where the subject identifier is stored. If not configured, the NameID attribute is used by default.
                                type: string
                            type: object
                          type: array
                        scriptMaxCompilationsRate:
                          description: |-
                            circuit breaker to prevent/minimize OOMs. Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
                            Script max compilation rate - circuit breaker to prevent/minimize OOMs. Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
                          type: string
                        searchMaxBuckets:
                          description: |-
                            (Number) Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
                            Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
                          format: int64
                          type: integer
                        serviceLog:
                          description: |-
                            (Boolean) Service logging. Store logs for the service so that they are available in the HTTP API and console.
                            Service logging. Store logs for the service so that they are available in the HTTP API and console.
                          type: boolean
                        threadPoolAnalyzeQueueSize:
                          description: |-
                            (Number) analyze thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            analyze thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolAnalyzeSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            analyze thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolForceMergeSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            force_merge thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolGetQueueSize:
                          description: |-
                            (Number) get thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            get thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolGetSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            get thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolSearchQueueSize:
                          description: |-
                            (Number) search thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            search thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolSearchSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            search thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolSearchThrottledQueueSize:
                          description: |-
                            (Number) search_throttled thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            search_throttled thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolSearchThrottledSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            search_throttled thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        threadPoolWriteQueueSize:
                          description: |-
                            (Number) write thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                            write thread pool queue size. Size for the thread pool queue. See documentation for exact details.
                          format: int64
                          type: integer
                        threadPoolWriteSize:
                          description: |-
                            value is automatically lowered if set to higher than maximum value.
                            write thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
                          format: int64
                          type: integer
                        version:
                          description: |-
                            (String) OpenSearch major version.
                            OpenSearch major version.
                          type: string
                      type: object
                    type: array
                  serviceHost:
                    description: |-
                      (String) Hostname to the service instance
                      Hostname to the service instance
                    type: string
                  servicePort:
                    description: |-
                      (String) Port to the service instance
                      Port to the service instance
                    type: string
                  serviceUsername:
                    description: |-
                      (String) Primary username to the service instance
                      Primary username to the service instance
                    type: string
                  state:
                    description: |-
                      (String) State of the service
                      State of the service
                    type: string
                  title:
                    description: |-
                      (String) Title of a managed database instance
                      Title of a managed database instance
                    type: string
                  type:
                    description: |-
                      (String) Type of the service
                      Type of the service
                    type: string
                  zone:
                    description: |-
                      fra1. You can list available zones with upctl zone list.
                      Zone where the instance resides, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
